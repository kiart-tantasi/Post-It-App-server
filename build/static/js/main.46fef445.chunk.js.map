{"version":3,"sources":["pages/Auth.module.css","components/Note.module.css","components/AddNote.module.css","modals/EditModal.module.css","layout/Nav.module.css","modals/Popup.module.css","modals/AlertModal.module.css","layout/Footer.module.css","components/Notes.module.css","layout/Nav.tsx","layout/Footer.tsx","layout/Layout.tsx","modals/AlertModal.tsx","hooks/useRedux.tsx","redux-store/authSlice.tsx","redux-store/loadingSlice.tsx","redux-store/notificationSlice.tsx","redux-store/postSlice.tsx","utilities/generateId.tsx","utilities/getLocalStoragePosts.tsx","redux-store/dataRefresher.tsx","hooks/useRequest.tsx","components/AddNote.tsx","components/Delete.tsx","components/Note.tsx","components/Notes.tsx","modals/EditModal.tsx","components/EditRoute.tsx","modals/Popup.tsx","pages/Main.tsx","pages/Auth.tsx","App.tsx","redux-store/index.tsx","index.tsx"],"names":["module","exports","Header","className","styles","isActive","route","to","Footer","footer","Layout","props","children","ModalOverlay","onClick","onClose","modalBackdrop","modalBox","modalContent","message","AlertModal","ReactDOM","createPortal","document","getElementById","useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","isLoggedIn","userName","reducers","logIn","state","logOut","setUserName","action","payload","authActions","actions","authReducer","reducer","loadingSlice","main","turnOnIsLoading","turnOffIsLoading","loadingActions","loadingReducer","notificationSlice","offlineNotificationIsClosed","trialNotificationIsClosed","closeOfflineNotification","openOfflineNotification","closeTrialNotification","notificationActions","notificationReducer","fetchPosts","createAsyncThunk","a","fetch","response","ok","Error","json","posts","err","console","log","postSlice","setPosts","addPost","_id","id","item","des","date","pending","deletePost","filter","x","editPost","map","turnPendingOn","extraReducers","builder","addCase","fulfilled","postActions","postReducer","generateId","char","capChar","toUpperCase","toRandom","answer","i","Math","floor","random","length","DEFAULT_POSTS","Date","getTime","getLocalStoragePosts","localStoragePosts","localStorage","getItem","updated","JSON","parse","parsedPosts","reversedPosts","reverse","setItem","stringify","reversedArray","refreshData","dispatch","credentials","userData","initialPosts","transformedPosts","useRequest","refreshDataHandler","useState","isLoading","setIsLoading","data","setData","success","setSuccess","requestData","options","method","headers","body","then","status","toString","res","getPostsAndUserName","useCallback","AddNote","post","auth","titleRef","useRef","desRef","expanded","setExpanded","alertMessage","setAlertMessage","alertOn","setAlertOn","addPostRequest","setPending","closeModal","window","onkeydown","e","key","preventDefault","onSubmit","current","value","trim","addRequestResponse","newItemId","getDate","newPosts","focus","cursorNone","cursorPointer","onKeyDown","type","placeholder","autoComplete","ref","CircularProgress","color","Delete","deletePostRequest","size","classProp","Note","getMonth","getFullYear","noTitle","withTitle","React","memo","Notes","notes","postId","useParams","thePost","find","editPostRequest","navigate","useNavigate","borderStyle","setBorderStyle","desBorderStyle","setDesBorderStyle","handleSubmit","setTitleRed","setTimeout","setDesRed","replace","handleCancel","useEffect","modalInput","style","modalTextarea","modalButtons","EditModal","EditRoute","path","element","Popup","mainText","extraText","onConfirm","button","fn","text","Main","notification","onConfirmProps","Fragment","Auth","usernameRef","passwordRef","registering","setRegistering","pendingLogin","setPendingLogin","pendingLogout","setPendingLogout","mainAuth","logoutButton","onRefreshData","catch","toggleAuth","username","password","htmlFor","labelUsernamePassword","submitAuth","googleAuth","googleA","href","App","loading","store","configureStore","render","StrictMode"],"mappings":"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","file":"static/js/main.46fef445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainAuth\":\"Auth_mainAuth__2ZaZ0\",\"two-buttons\":\"Auth_two-buttons__WhNwd\",\"googleAuth\":\"Auth_googleAuth__3v-IN\",\"googleA\":\"Auth_googleA__1NmnJ\",\"toggleAuth\":\"Auth_toggleAuth__1_tZS\",\"submitAuth\":\"Auth_submitAuth__3-hrr\",\"logoutButton\":\"Auth_logoutButton__1Q9iA\",\"spinner-ui\":\"Auth_spinner-ui__16gXx\",\"labelUsernamePassword\":\"Auth_labelUsernamePassword__2VK9P\",\"userName\":\"Auth_userName__2pbIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noTitle\":\"Note_noTitle__3yhs-\",\"withTitle\":\"Note_withTitle__3Kw89\",\"Item-block\":\"Note_Item-block__3tgU5\",\"description-text\":\"Note_description-text__3dt3t\",\"item-block-footer\":\"Note_item-block-footer__2wNfO\",\"date-text\":\"Note_date-text__3BMF6\",\"footer-buttons\":\"Note_footer-buttons__3r1ym\",\"edit-link\":\"Note_edit-link__2Plr8\",\"spinner-ui\":\"Note_spinner-ui__3dbuM\",\"item-block-flex-container\":\"Note_item-block-flex-container__glae5\",\"item-block-flex-footer\":\"Note_item-block-flex-footer__1Uvhb\",\"item-block-flex-body\":\"Note_item-block-flex-body__27nY9\",\"footer-date\":\"Note_footer-date__12Frm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursorNone\":\"AddNote_cursorNone__d9LIG\",\"cursorPointer\":\"AddNote_cursorPointer__1F34S\",\"Add-item\":\"AddNote_Add-item__3Vgbj\",\"title-input\":\"AddNote_title-input__nPgHt\",\"Two-input\":\"AddNote_Two-input__2V-Uv\",\"spinner-ui\":\"AddNote_spinner-ui__118O-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"EditModal_modalBackdrop__3QvLq\",\"modalBox\":\"EditModal_modalBox__2wodi\",\"modalInput\":\"EditModal_modalInput__3ITpW\",\"modalTextarea\":\"EditModal_modalTextarea__11_oI\",\"modalButtons\":\"EditModal_modalButtons__1PPq9\",\"submit-button\":\"EditModal_submit-button__PTV1J\",\"spinnng-div\":\"EditModal_spinnng-div__NnoNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"Nav_main-nav__3LSxB\",\"route\":\"Nav_route__3xW3k\",\"route-active\":\"Nav_route-active__24Xg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop-up\":\"Popup_pop-up__It1J7\",\"button-container\":\"Popup_button-container__2DuHv\",\"button\":\"Popup_button__1kBtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"AlertModal_modalBackdrop__gkwGj\",\"modalBox\":\"AlertModal_modalBox__1E7Of\",\"modalContent\":\"AlertModal_modalContent__3saFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__Uthdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"Notes_notes__VPg_J\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Nav.module.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className={styles[\"main-nav\"]}>\r\n\r\n      {/* /POSTS */}\r\n      <NavLink\r\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\r\n        to=\"/posts\"\r\n      >\r\n        โพสต์อิท\r\n      </NavLink>\r\n\r\n      {/* /ACCOUNT */}\r\n      <NavLink\r\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\r\n        to=\"/account\"\r\n      >\r\n        บัญชี\r\n      </NavLink>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from \"./Footer.module.css\"; \r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className={styles.footer}>\r\n            <p>Copyright 2022 © created and designed by Kiart Tantasi</p>\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Layout(props: {children: React.ReactNode}) {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      {props.children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport styles from \"./AlertModal.module.css\";\r\n\r\nconst ModalOverlay =(props:{message:string; onClose: () => void;}) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* BACKDROP */}\r\n            <div onClick={props.onClose} className={` ${styles.modalBackdrop} close-modal`} />\r\n\r\n            {/* MODAL */}\r\n            <div className={`${styles.modalBox} ${styles.modalContent}`}>\r\n\r\n                {/* MESSAGE */}\r\n                <h1>{props.message}</h1>\r\n\r\n                {/* CLOSE BUTTON */}\r\n                <button onClick={props.onClose}>ปิด</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function AlertModal(props: {message:string; onClose: () => void}) {\r\n\r\n    // use ReactDOM.createPortal() to create this modal in the div id \"modals\" in index.html\r\n    \r\n    return ReactDOM.createPortal(\r\n\r\n        <ModalOverlay message={props.message} onClose={props.onClose} />,\r\n\r\n        document.getElementById(\"modals\") as HTMLElement\r\n\r\n    );\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../redux-store/index';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n//SOURCE: https://redux.js.org/usage/usage-with-typescript","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState: {isLoggedIn: boolean; userName: string} = {\r\n    isLoggedIn: false,\r\n    userName: \"\"\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        logIn(state) {\r\n            state.isLoggedIn = true;\r\n        },\r\n        logOut(state) {\r\n            state.isLoggedIn = false;\r\n        },\r\n        setUserName(state, action: PayloadAction<string>) {\r\n            state.userName = action.payload;            \r\n        }\r\n    }\r\n})\r\n\r\nexport const authActions = authSlice.actions;\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    main: false\r\n}\r\n\r\nconst loadingSlice = createSlice({\r\n    name: \"loading\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        turnOnIsLoading(state) {\r\n            state.main = true;\r\n        },\r\n        turnOffIsLoading(state) {\r\n            state.main = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const loadingActions = loadingSlice.actions;\r\nconst loadingReducer = loadingSlice.reducer;\r\nexport default loadingReducer;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    offlineNotificationIsClosed: false,\r\n    trialNotificationIsClosed: false,\r\n}\r\n\r\nconst notificationSlice = createSlice({\r\n    name: \"notification\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        closeOfflineNotification(state) {\r\n            state.offlineNotificationIsClosed = true;\r\n        },\r\n        openOfflineNotification(state) {\r\n            state.offlineNotificationIsClosed = false;\r\n        },\r\n        closeTrialNotification(state) {\r\n            state.trialNotificationIsClosed = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const notificationActions = notificationSlice.actions;\r\nconst notificationReducer = notificationSlice.reducer;\r\nexport default notificationReducer;","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { PostModel } from \"../interfaces/interfaces\";\r\n\r\nconst initialState:{posts:PostModel[];} = {\r\n    posts: []\r\n}\r\n\r\n// createAsyncThunk\r\nconst fetchPosts = createAsyncThunk(\r\n    \"posts/fetchPosts\",\r\n    async() => {\r\n        try {\r\n            const response: Response = await fetch(\"/api/posts\");\r\n            if (!response.ok) {\r\n                throw new Error(\"cannot fetch posts\");\r\n            }\r\n            const posts = await response.json();\r\n            return posts;\r\n        } catch (error) {\r\n            const err = error as Error;\r\n            console.log(err.message);\r\n        }\r\n    }\r\n)\r\n\r\nconst postSlice = createSlice({\r\n    name: \"post\",\r\n    initialState: initialState,\r\n    reducers: {\r\n\r\n        // SET POSTS\r\n        setPosts(state, action: PayloadAction<PostModel[]>) {\r\n            state.posts = action.payload;\r\n        },\r\n\r\n        // ADD A POST\r\n        addPost(state, action:PayloadAction<{id:string;item:string;des:string;date:number}>) {\r\n            state.posts = [...state.posts,\r\n                {\r\n                    _id: action.payload.id,\r\n                    item: action.payload.item,\r\n                    des: action.payload.des,\r\n                    date: action.payload.date,\r\n                    pending: false\r\n                }\r\n            ];\r\n        },\r\n\r\n        // DELETE A POST\r\n        deletePost(state, action:PayloadAction<string>) {\r\n            state.posts = state.posts.filter(x => x._id !== action.payload);\r\n        },\r\n\r\n        // EDIT A POST\r\n        editPost(state, action:PayloadAction<{id:string;item:string;des:string}>) {\r\n            state.posts = state.posts.map(x => {\r\n                if (x._id === action.payload.id) {\r\n                    return {...x, item: action.payload.item, des: action.payload.des, pending: false};\r\n                }\r\n                return x;\r\n            });\r\n        },\r\n\r\n        // TURN A POST'S PENDING ON\r\n        turnPendingOn(state, action: PayloadAction<string>) {\r\n            state.posts = state.posts.map(x => {\r\n                if (x._id === action.payload) {\r\n                    return {...x, pending: true};\r\n                }\r\n                return x;\r\n            });\r\n        }\r\n    },\r\n\r\n    // EXTRA REDUCERS (REDUX) ????\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchPosts.fulfilled, (state, action) => {\r\n                console.log(action.payload);\r\n            })\r\n    }\r\n})\r\n\r\nexport {fetchPosts}; // ???\r\n\r\nexport const postActions = postSlice.actions;\r\nconst postReducer = postSlice.reducer;\r\nexport default postReducer;\r\n","export default function generateId() {\r\n    const char = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const capChar = char.toUpperCase();\r\n    const num = \"1234567890\";\r\n    const toRandom = char + capChar + num;\r\n  \r\n    let answer =\"\";\r\n    for (let i=0;i < 30; i++) {\r\n      answer = answer + toRandom[Math.floor(Math.random() * toRandom.length)];\r\n    }\r\n    return answer;\r\n}","import generateId from \"./generateId\";\r\nimport { PostModel } from \"../interfaces/interfaces\";\r\n\r\nconst DEFAULT_POSTS = [\r\n    {_id: generateId(), item: \"โพสต์แรกของฉัน\", des:\"ดูแลสุขภาพด้วยงับ\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"ประชุมเช้า\", des:\"วันพุธ เข้าzoomก่อน 10 โมง\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"จันทร์หน้า\", des:\"ทำ OT ...\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"หยุดปีใหม่\", des:\"วันศุกร์หน้าแล้ว!\", date: new Date().getTime(), pending: false}\r\n];\r\n\r\nexport default function getLocalStoragePosts():PostModel[] {\r\n\r\n    const localStoragePosts = localStorage.getItem(\"myPostIt\");\r\n    const updated = localStorage.getItem(\"myPostItUpdate\");\r\n\r\n    //updated - just retrieve all local posts\r\n    if (localStoragePosts && updated) {\r\n        const parsedPosts = JSON.parse(localStoragePosts);\r\n        return parsedPosts; \r\n    }\r\n\r\n    // never updated - reverse posts first then use it\r\n    else if (localStoragePosts && !updated) {\r\n        const parsedPosts = JSON.parse(localStoragePosts);\r\n        const reversedPosts = [...parsedPosts].reverse();\r\n        localStorage.setItem(\"myPostIt\", JSON.stringify(reversedPosts));\r\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\r\n        return reversedPosts;\r\n    }\r\n\r\n    //default (never use)\r\n    else if (!localStoragePosts) {\r\n        localStorage.setItem(\"myPostIt\", JSON.stringify(DEFAULT_POSTS));\r\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\r\n        return DEFAULT_POSTS;\r\n    }\r\n\r\n    else {\r\n        throw new Error(\"getting posts error.\"); // should not occur.\r\n    }\r\n}\r\n\r\n// NEED MORE UTILITY FUNCTIONS TO ADD / EDIT / DELETE POSTS","import { AppDispatch } from \".\";\r\nimport { authActions } from \"./authSlice\";\r\nimport { loadingActions } from \"./loadingSlice\";\r\nimport { notificationActions } from \"./notificationSlice\";\r\nimport { postActions } from \"./postSlice\";\r\nimport { PostModel } from \"../interfaces/interfaces\";\r\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\r\n\r\n// *** THIS FUNCTION CAN ALSO BE CREATED IN THE FORM OF \"THUNK\" *** // \r\n\r\n// ------- WHEN APP STARTS OR USE useRequest() ------ //\r\nexport const refreshData = async(dispatch: AppDispatch) => {\r\n\r\n  // TURN LOADING ON\r\n  dispatch(loadingActions.turnOnIsLoading());\r\n\r\n  // PREPARE 3 THINGS TO RETURN\r\n  let initialPosts: PostModel[];\r\n  let userName: string;\r\n  let isLoggedIn: boolean;\r\n\r\n  try {\r\n\r\n    const response = await fetch(\"/api/user\", {credentials:\"include\"});\r\n    if (!response.ok) throw new Error(\"offline mode activated\");\r\n    // --------- ONLINE --------- //\r\n    const userData = await response.json();\r\n    initialPosts = userData.posts;\r\n    userName = userData.userName;\r\n    isLoggedIn = true;\r\n\r\n  } catch (error) {\r\n\r\n    // --------- OFFLINE --------- //\r\n    const localStoragePosts = getLocalStoragePosts();\r\n    initialPosts = localStoragePosts;\r\n    userName = \"\";\r\n    isLoggedIn = false;\r\n    const err = (error as Error);\r\n    console.log(err.message || \"getting posts failed.\");\r\n\r\n  }\r\n\r\n  // ------ ADD \"pending\" PROPERTY TO EVERY POST ------ //\r\n  const transformedPosts = initialPosts.map(x => {\r\n    return{...x, pending: false}\r\n  });\r\n\r\n  // DISPATCH: set posts / isLoggedIn / offlineNotification / username / turn loading off\r\n  dispatch(postActions.setPosts(transformedPosts));\r\n  dispatch(isLoggedIn ? authActions.logIn(): authActions.logOut());\r\n  dispatch(isLoggedIn ? notificationActions.closeOfflineNotification() : notificationActions.openOfflineNotification()); // open noti if offline\r\n  dispatch(authActions.setUserName(userName));\r\n  dispatch(loadingActions.turnOffIsLoading());\r\n};","import { useCallback, useState } from \"react\";\r\nimport { useAppDispatch } from \"./useRedux\";\r\nimport { refreshData } from \"../redux-store/dataRefresher\";\r\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\r\n\r\nimport { AddPostReturn, FetchOptionsModel, PostModel } from \"../interfaces/interfaces\";\r\nimport { FetchDataReturn } from \"../interfaces/interfaces\";\r\n\r\nexport default function useRequest() {\r\n\r\n    // REDUX\r\n    const dispatch = useAppDispatch();\r\n    const refreshDataHandler = () => {\r\n        refreshData(dispatch);\r\n    }\r\n\r\n    // THINGS TO RETURN FROM THIS HOOK\r\n    const [isLoading , setIsLoading] = useState(false);\r\n    const [data, setData] = useState<FetchDataReturn | AddPostReturn>();\r\n    const [success, setSuccess] = useState(false);\r\n    \r\n    // GET POSTS AND USERNAME\r\n    const getPostsAndUserName = useCallback( async() => {\r\n        // TURN LOADING ON\r\n        setIsLoading(true);\r\n        let initialPosts:PostModel[];\r\n        let userName;\r\n        let isLoggedIn;\r\n\r\n        try {\r\n          const response = await fetch(\"/api/user\", {credentials:\"include\"});\r\n          if (!response.ok) throw new Error(\"offline mode activated\");\r\n          // ------------ ONLINE ----------- //\r\n          const userData = await response.json();\r\n          initialPosts = userData.posts;\r\n          userName = userData.userName;\r\n          isLoggedIn = true;\r\n        }\r\n        \r\n        catch (error) {\r\n          // ------------ OFFLINE ----------- //\r\n          const localStoragePosts = getLocalStoragePosts();\r\n          initialPosts = localStoragePosts;\r\n          userName = null;\r\n          isLoggedIn = false;\r\n          const err = (error as Error);\r\n          console.log(err.message || \"getting posts failed.\");\r\n        }\r\n\r\n        // TURN LOADING OFF\r\n        setIsLoading(false);\r\n\r\n        // THERE ARE 2 WAYS TO GET THIS DATA\r\n\r\n        // 1. FROM THIS HOOK (data property)\r\n        setData({\r\n            posts: initialPosts,\r\n            isLoggedIn: isLoggedIn,\r\n            userName: userName\r\n        });\r\n\r\n        // 2. RETURN DIRECTLY\r\n        return {\r\n            posts: initialPosts,\r\n            isLoggedIn: isLoggedIn,\r\n            userName: userName\r\n        } \r\n    }, []);\r\n    \r\n    async function addPost(requestData: {item:string;des:string}) {\r\n        // TURN LOADING ON\r\n        setIsLoading(true);\r\n\r\n        const options: FetchOptionsModel = {\r\n            method:\"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({ item: requestData.item, des: requestData.des }),\r\n            credentials: \"include\"\r\n        }\r\n\r\n        // RETURN FETCHED DATA\r\n        return fetch(\"/api/posts\", options)\r\n        .then((response) => {\r\n\r\n            // OK\r\n            if (response.ok) {\r\n              return response.json();\r\n\r\n              // MISSING BOTH TITLE AND DESCRIPTION\r\n            } else if (response.status === 400) {\r\n              setIsLoading(false);\r\n              throw new Error(\"No information sent\");\r\n\r\n              // NO AUTHENITCATION\r\n            } else {\r\n              refreshDataHandler();\r\n              setIsLoading(false);\r\n              throw new Error(\"No authentication\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            // TURN LOADING OFF\r\n            setIsLoading(false);\r\n\r\n            // THERE ARE 2 WAYS TO GET THIS DATA\r\n\r\n            // 1. FROM THIS HOOK (data property)\r\n            setData({\r\n                id: data.id,\r\n                date: data.date\r\n            });\r\n\r\n            // 2. RETURN DIRECTLY\r\n            return {\r\n                id: data.id,\r\n                date: data.date\r\n            }\r\n        })\r\n        // NO CATCHING ERROR HERE\r\n    }\r\n\r\n    async function deletePost(requestData:{id:string}) {\r\n        // TURN LOADING ON AND SET SUCCESS TO FALSE\r\n        setIsLoading(true);\r\n        setSuccess(false);\r\n\r\n        // RETURN FETCHED DATA\r\n        return fetch(\"/api/posts/\"+ requestData.id.toString(), {method:\"DELETE\", credentials: \"include\"})\r\n        .then((res) => {\r\n\r\n            // SUCCESS\r\n            // THERE ARE 2 WAYS TO KNOW IF IT IS SUCCESS\r\n            // 1. FROM THIS HOOK (success property)\r\n            // 2. RETURN DIRECTLY \"success\"\r\n            if (res.ok) {\r\n                setIsLoading(false);\r\n                setSuccess(true);\r\n                return \"success\";\r\n\r\n            // NO AUTHENTICATION\r\n            } else if (res.status === 403) {\r\n                refreshDataHandler();\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"No authentication\");\r\n\r\n            // OTHER ERRORS\r\n            } else {\r\n                refreshDataHandler();\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"deleting failed.\")\r\n            }\r\n        })\r\n        // NO CATCHING ERROR HERE\r\n    }\r\n\r\n    async function editPost(requestData:{item:string;des:string;id:string}) {\r\n        // TURN LOADING ON AND SET SUCCESS TO FALSE\r\n        setIsLoading(true);\r\n        setSuccess(false);\r\n        const options: FetchOptionsModel = {\r\n            method:\"PATCH\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({item: requestData.item, des:requestData.des}),\r\n            credentials: \"include\"\r\n        }\r\n\r\n        return fetch(\"/api/posts/\" + requestData.id, options)\r\n        .then(response => {\r\n            // SUCCESS\r\n            // THERE ARE 2 WAYS TO KNOW IF IT IS SUCCESS\r\n            // 1. FROM THIS HOOK (success property)\r\n            // 2. RETURN DIRECTLY \"success\"\r\n            if(response.ok) {\r\n                setIsLoading(false);\r\n                setSuccess(true);\r\n                return \"success\";\r\n\r\n            // MISSING BOTH TITLE AND DESCRIPTION\r\n            } else if (response.status === 400) {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"No information sent\")\r\n\r\n            // NO AUTHENTICATION\r\n            } else if (response.status === 403) {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                refreshDataHandler();\r\n                throw new Error(\"No authentication\")\r\n\r\n            // OTHER ERRORS\r\n            } else {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                refreshDataHandler();\r\n                throw new Error(\"updating failed.\")\r\n            }\r\n        })\r\n        // NO CATCHING ERROR HERE\r\n    }\r\n\r\n    // ------------------------ RETURN FUNCTIONS FOR useRequest() ------------------------ //\r\n    return {getPostsAndUserName, addPost, editPost, deletePost, isLoading, data, success};\r\n}","import React, { useState, useRef } from \"react\";\r\nimport Alert from \"../modals/AlertModal\";\r\nimport useRequest from \"../hooks/useRequest\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/useRedux\";\r\nimport { postActions } from \"../redux-store/postSlice\";\r\nimport generateId from \"../utilities/generateId\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport styles from \"./AddNote.module.css\"\r\n\r\nexport default function AddNote() {\r\n  const dispatch = useAppDispatch();\r\n  const posts = useAppSelector(state => state.post.posts);\r\n  const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\r\n\r\n  const titleRef = useRef<HTMLInputElement>(null);\r\n  const desRef = useRef<HTMLInputElement>(null);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [alertMessage,setAlertMessage] = useState(\"\");\r\n  const [alertOn, setAlertOn] = useState(false);\r\n  const { addPost: addPostRequest } = useRequest();\r\n  const [pending, setPending] = useState(false);\r\n\r\n  function handleTitleOn() {\r\n    if (expanded === false) {\r\n      setExpanded(true);\r\n    }\r\n  }\r\n\r\n  function handleTitleKeyPress(e: React.KeyboardEvent) {\r\n    if (e.key === \"ArrowDown\") {\r\n      e.preventDefault();\r\n      desRef.current!.focus();\r\n    }\r\n  }\r\n\r\n  function handleDesKeyDown(e: React.KeyboardEvent) {\r\n    if (e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      titleRef.current!.focus();\r\n    }\r\n  }\r\n\r\n  // ------------------------ SUBMIT A POST ----------------------------- //\r\n\r\n  function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    // ---------------- FORM VALIDATION ----------------- //\r\n    if (expanded === false) {\r\n      setAlertMessage(\"โปรดระบุข้อความ\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    const item = titleRef.current!.value.trim() || \"\";\r\n    const des = desRef.current!.value.trim() || \"\";\r\n    if (!item && !des) {\r\n      setAlertMessage(\"โปรดระบุข้อความ\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    if (item.length > 25) {\r\n      setAlertMessage(\"หัวข้อยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    if (item.length !== 0 && des.length > 95) {\r\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    } else if (item.length === 0 && des.length > 120) {\r\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n\r\n    // SUCCESS\r\n    // ---------------- ONLINE ----------------- //\r\n    if (isLoggedIn) {\r\n      setPending(true);\r\n      (async() => {\r\n        try {\r\n          // http request\r\n          const addRequestResponse = await addPostRequest({item:item,des:des});\r\n          // redux \r\n          dispatch(postActions.addPost({id: addRequestResponse.id, item, des, date: addRequestResponse.date}));\r\n          setPending(false);\r\n        } catch (error) {\r\n          const err = error as Error;\r\n          console.log(err.message);\r\n          if (err.message === \"No information sent\") {\r\n            setPending(false);\r\n          }\r\n        }\r\n      }) ();\r\n      \r\n    // ---------------- OFFLINE ----------------- //\r\n    } else {\r\n      // prepare post data\r\n      const newItemId = generateId();\r\n      const getDate = new Date().getTime();\r\n      const newPosts = [\r\n        ...posts,{\r\n          _id: newItemId,\r\n          item: item,\r\n          des: des,\r\n          date: getDate,\r\n        }\r\n      ];\r\n      // local storage\r\n      localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n      // redux\r\n      dispatch(postActions.addPost({id: newItemId, item, des, date: getDate}))\r\n    }\r\n    \r\n    titleRef.current!.value = \"\";\r\n    desRef.current!.value = \"\";\r\n    desRef.current!.focus();\r\n  }\r\n\r\n  // -------------------------------------------------------------------- //\r\n\r\n  function closeModal() {\r\n    setAlertOn(false);\r\n  }\r\n\r\n  window.onkeydown = (e) => {\r\n    if (alertOn) {\r\n      if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n        e.preventDefault();\r\n        closeModal();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\r\n\r\n    <div className={styles[\"Add-item\"]}>\r\n\r\n      {/* FORM */}\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <div className={` ${styles[\"Two-input\"]} ${expanded ? styles.cursorNone : styles.cursorPointer}`}>\r\n\r\n          {/* TITLE */}\r\n          {expanded && <input\r\n            className={styles[\"title-input\"]}\r\n            onKeyDown={handleTitleKeyPress}\r\n            type=\"text\"\r\n            placeholder=\"หัวข้อ (optional)\"\r\n            autoComplete=\"off\"\r\n            ref={titleRef}\r\n          ></input>}\r\n          \r\n          {/* DESCRIPTION */}\r\n          <input\r\n            className={styles[\"des-input\"]}\r\n            onClick={handleTitleOn}\r\n            onKeyDown={handleDesKeyDown}\r\n            type=\"text\"\r\n            placeholder=\"โพสต์อิท !\"\r\n            autoComplete=\"off\"\r\n            ref={desRef}\r\n          ></input>\r\n          \r\n        </div>\r\n\r\n        {/* SUBMIT BUTTON */}\r\n        {!pending && <button\r\n          type=\"submit\"\r\n        >\r\n          <AddIcon />\r\n        </button>}\r\n\r\n      </form>\r\n      \r\n      {/* SPINNER WHEN ADDING A NEW POST */}\r\n      {pending && <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport useRequest from \"../hooks/useRequest\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { postActions } from '../redux-store/postSlice';\r\n\r\nexport default function Delete(props:{id:string;classProp:string}) {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const posts = useAppSelector(state => state.post.posts);\r\n    const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\r\n\r\n    const [pending, setPending] = useState(false);\r\n    const { deletePost: deletePostRequest } = useRequest();\r\n    const id = props.id;\r\n  \r\n    function handleDelete() {\r\n        // -------- ONLINE -------- //\r\n        if (isLoggedIn) {\r\n            setPending(true);\r\n            (async() => {\r\n                try {\r\n                    await deletePostRequest({id: id.toString()});\r\n                    dispatch(postActions.deletePost(id));\r\n                } catch(error) {\r\n                    const err = error as Error;\r\n                    console.log(err.message || \"delete request failed.\");\r\n                }\r\n            }) ();\r\n            \r\n        // -------- OFFLINE -------- //\r\n        } else {\r\n            const newPosts = posts.filter((x) => x._id.toString() !== id.toString());\r\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n            dispatch(postActions.deletePost(id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className=\"delete-button\" onClick={handleDelete}>\r\n            {!pending && <DeleteIcon />}\r\n            {pending && <CircularProgress size={20} color=\"inherit\" className={props.classProp} />}\r\n        </button>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Delete from \"../components/Delete\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport styles from \"./Note.module.css\";\r\n\r\nconst Note: React.FC<{ date:number; item: string; des: string; id: string; }> = (props) => {\r\n    const date = new Date(props.date).getDate().toString() + \"/\" + ( new Date(props.date).getMonth() + 1 ).toString() + \"/\" + new Date(props.date).getFullYear().toString() || \"no date described.\";\r\n  \r\n    return (\r\n      <div className={styles[\"Item-block\"]}>\r\n  \r\n        <div className={styles[\"item-block-flex-container\"]}>\r\n\r\n          {/* MAIN BODY */}\r\n          <div className={styles[\"item-block-flex-body\"]}>\r\n            {/* TITLE */}\r\n            <h3>{props.item}</h3>\r\n            {/* DESCRIPTION */}\r\n            <p className={` ${styles[\"description-text\"]} ${(props.item === \"\") ? styles.noTitle : styles.withTitle}`}>{props.des}</p>\r\n          </div>\r\n  \r\n          {/* FOOTER */}\r\n          <div className={` ${styles[\"item-block-footer\"]} ${styles[\"item-block-flex-footer\"]} `}>\r\n            {/* DATE */}\r\n            <div className={styles[\"footer-date\"]}>\r\n              <p className={styles[\"date-text\"]}>{date}</p>\r\n            </div>\r\n\r\n            {/* BUTTONS */}\r\n            <div className={styles[\"footer-buttons\"]}>\r\n              {/* EDIT BUTTON */}\r\n              <Link className={styles[\"edit-link\"]} to={`/posts/edit/${props.id}`}><button><EditIcon className=\"edit-icon\" /></button></Link>\r\n              {/* DELETE BUTTON */}\r\n              <Delete id={props.id} classProp={styles[\"spinner-ui\"]} />\r\n            </div>\r\n\r\n          </div>\r\n  \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default React.memo(Note);","import Note from \"./Note\";\r\nimport styles from \"./Notes.module.css\";\r\nimport { useAppSelector } from \"../hooks/useRedux\";\r\n\r\nexport default function Notes() {\r\n  const posts = useAppSelector(state => state.post.posts);\r\n  const reversedPosts = [...posts].reverse();\r\n  // REVERSE TO BRING THE LATEST POSTS FIRST\r\n\r\n  return (\r\n    <div className={styles.notes}>      \r\n      {reversedPosts.map((x) => {\r\n        return (\r\n          <Note\r\n            key={x._id}\r\n            id={x._id}\r\n            item={x.item}\r\n            des={x.des}\r\n            date={x.date}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}","import React, {useRef, useEffect, useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useRequest from \"../hooks/useRequest\";\r\n// CSS AND MUI\r\nimport styles from \"./EditModal.module.css\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n// REDUX\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { postActions } from '../redux-store/postSlice';\r\n\r\nfunction ModalOverlay() {\r\n\r\n    // PARAMS\r\n    const { postId } = useParams();\r\n\r\n    // REDUX\r\n    const dispatch = useAppDispatch();\r\n    const { posts} = useAppSelector(state => state.post);\r\n    const thePost = posts.find(x => x._id.toString() === postId);\r\n    const { isLoggedIn } = useAppSelector(state => state.auth);\r\n\r\n    // useRequest()\r\n    const { editPost: editPostRequest } = useRequest();\r\n\r\n    // NAVIFATE\r\n    const navigate = useNavigate();\r\n\r\n    // STATES\r\n    const titleRef = useRef<HTMLInputElement>(null);\r\n    const desRef = useRef<HTMLTextAreaElement>(null);\r\n    const [ borderStyle, setBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n    const [ desBorderStyle, setDesBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n\r\n    useEffect(() => {\r\n\r\n        // SHOW POST ONLY WHEN READY\r\n        if (thePost && !thePost.pending) {\r\n            titleRef.current!.value = thePost.item || \"\";\r\n            desRef.current!.value = thePost.des || \"\";\r\n            desRef.current!.focus();\r\n\r\n        // WHEN DATA IS NOT READY\r\n        } else if (!thePost && !thePost!.pending) {\r\n            console.log(\"loading data for editing...\");\r\n        }\r\n\r\n    }, [thePost])\r\n\r\n    // HANDLING ARROWN DOWN AND ENTER BUTTON\r\n\r\n    function handleTitleKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            desRef.current!.focus();\r\n        }\r\n    }\r\n\r\n    function handleDesKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    // --------------------- SUBMIT TO EDIT A POST --------------------- //\r\n\r\n    function handleSubmit(e?: React.FormEvent) {\r\n        if (e) e.preventDefault();\r\n        \r\n        const id: string | undefined = postId;\r\n        const item = titleRef.current!.value.trim();\r\n        const des = desRef.current!.value.trim();\r\n\r\n        // -- FUNCTIONS TO MAKE TITLE AND DESCRIPTION'S BORDER RED -- //\r\n        function setTitleRed() {\r\n            setBorderStyle({\"border\":\"1px solid red\"});\r\n            setTimeout(() => {\r\n                setBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n            }, 3000);\r\n        }\r\n        function setDesRed() {\r\n            setDesBorderStyle({\"border\":\"1px solid red\"});\r\n            setTimeout(() => {\r\n                setDesBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n            }, 3000);\r\n        }\r\n\r\n        // FORM VALIDATION\r\n\r\n        // NO CHANGES FOUND\r\n        if (item === thePost!.item && des === thePost!.des) {\r\n            console.log(\"no changes found.\");\r\n            navigate(\"/posts\");\r\n            return;\r\n        }\r\n\r\n        // EMPTY VALUES\r\n        if (item.length === 0 && des.length === 0) {\r\n            setTitleRed();\r\n            setDesRed();\r\n            return;\r\n        }\r\n\r\n        // TITLE > 25 && DESCRIPTION > 95\r\n        if (item.length > 25 && des.length > 95) {\r\n            setTitleRed();\r\n            setDesRed();\r\n            return;\r\n        }\r\n\r\n        // TITLE > 25\r\n        if (item.length > 25) {\r\n            setTitleRed();\r\n            return;\r\n        }\r\n\r\n        // DESCRIPTION > 95 WITH TITLE\r\n        if (des.length > 95 && item.length !== 0) {\r\n            setDesRed();\r\n            return;\r\n        }\r\n\r\n        // DESCRIPTION > 120 WITHOUT TITLE\r\n        if (des.length > 120 && item.length === 0) {\r\n            setDesRed();\r\n            return;\r\n        }\r\n\r\n        // SUCCESS\r\n\r\n        // ---------------- ONLINE ---------------- //   \r\n        if (isLoggedIn) {\r\n            // TURN ON PENDING (FOR SPINNER)\r\n            dispatch(postActions.turnPendingOn(id!));\r\n\r\n            // SEND REQUEST (with useRequest())\r\n            (async() => {\r\n                try {\r\n\r\n                    // SEND REQUEST\r\n                    await editPostRequest({item:item,des:des,id:id!});\r\n\r\n                    // DISPATCH\r\n                    dispatch(postActions.editPost({id:id!, item, des}));\r\n\r\n                    // NAVIGATE TO \"/posts\"\r\n                    navigate(\"/posts\", {replace:true});\r\n\r\n                } catch(err) {\r\n                    console.log(err);\r\n                    navigate(\"/posts\", {replace:true});\r\n                }\r\n            }) ();\r\n\r\n        // ---------------- OFFLINE ---------------- // \r\n        } else {\r\n            // EDIT POSTS FROM REDUX (useAppSelector)\r\n            const newPosts = posts.map((x) => (x._id.toString() === id!.toString() ? { ...x, item: item, des: des } : x));\r\n\r\n            // SET IN LOCAL STORAGE\r\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n\r\n            // DISPATCH\r\n            dispatch(postActions.editPost({id:id!, item, des}));\r\n\r\n            // NAVIGATE TO \"/posts\"\r\n            navigate(\"/posts\", {replace:true});\r\n        }\r\n    }\r\n    // ----------------------------------------------------------------- //\r\n\r\n    function handleCancel() {\r\n        navigate(\"/posts\",{ replace: true });        \r\n    }\r\n\r\n    window.onkeydown = (e) => {\r\n        if (e.key === \"Escape\") {\r\n            e.preventDefault();\r\n            handleCancel();\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* BACKDROP */}\r\n            <div onClick={handleCancel} className={`backdrop-div ${styles.modalBackdrop}`} />\r\n\r\n            {/* MODAL */}\r\n            <div className={styles.modalBox}>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    {/* TITLE */}\r\n                    <input type=\"text\" ref={titleRef} className={styles.modalInput} style={borderStyle} onKeyDown={handleTitleKeyDown} />\r\n                    <br/><br/>\r\n\r\n                    {/* DESCRIPTION */}\r\n                    <textarea onKeyDown={handleDesKeyDown} ref={desRef} className={styles.modalTextarea} style={desBorderStyle} />\r\n\r\n                    {/* SPINNER || BUTTONS */}\r\n                    {thePost!.pending ?\r\n\r\n                        // SPINNER (WHEN PENDING)\r\n                        <div className={styles[\"spinnng-div\"]}><CircularProgress size={35} color=\"inherit\" /></div>:\r\n\r\n                        // BUTTONS\r\n                        <div className={styles.modalButtons}>\r\n                            <button type=\"button\" onClick={handleCancel}>ยกเลิก</button>\r\n                            <button type=\"submit\" className={styles[\"submit-button\"]}>แก้ไข</button>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function EditModal () {\r\n    return ReactDOM.createPortal(\r\n            <ModalOverlay />,\r\n            document.getElementById(\"edit-modal\") as HTMLElement\r\n        );\r\n}\r\n// ReactDOM.createPoral to link to div id \"edit-modal\" in index.html","import EditModal from \"../modals/EditModal\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\n\r\nexport default function EditRoute() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"edit\">\r\n                <Route path=\":postId\" element={<EditModal />} />\r\n            </Route>\r\n        </Routes>\r\n    )\r\n}\r\n// DYNAMIC REACT ROUTER","import styles from \"./Popup.module.css\";\r\n\r\ntype PopupProps = {\r\n  onClick: () => void;\r\n  mainText: string;\r\n  extraText?: string;\r\n  onConfirm?: {\r\n    text: string;\r\n    fn: () => void;\r\n  };\r\n}\r\n\r\nexport default function Popup(props: PopupProps) {\r\n\r\n  return (\r\n    <div className={styles[\"pop-up\"]}>\r\n\r\n      {/* MAIN TEXT */}\r\n      <p>{props.mainText}</p>\r\n\r\n      {/* EXTRA TEXT IF USED */}\r\n      {props.extraText && <p>{props.extraText}</p>}\r\n\r\n      {/* BUTTONS */}\r\n      <div className={styles[\"button-container\"]}>\r\n\r\n          {/* CONFIRM BUTTON */}\r\n          {props.onConfirm && <button className={styles.button} onClick={props.onConfirm.fn}>{props.onConfirm.text}</button>}\r\n\r\n          {/* CLOSE BUTTON */}\r\n          <button className={styles.button} onClick={props.onClick}>ปิด</button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport AddNote from '../components/AddNote';\r\nimport Notes from \"../components/Notes\";\r\nimport Edit from \"../components/EditRoute\";\r\nimport Popup from '../modals/Popup';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { notificationActions } from '../redux-store/notificationSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Main() {\r\n    // REDUX\r\n    const dispatch = useAppDispatch();\r\n    const offlineNotificationIsClosed = useAppSelector(state => state.notification.offlineNotificationIsClosed);\r\n\r\n    // NAVIGATE\r\n    const navigate = useNavigate();\r\n    const handleNavigateToAuthPage = () => {\r\n        navigate(\"/account\");\r\n    }\r\n\r\n    // POPUP PROPS\r\n    const onConfirmProps = {\r\n        fn: handleNavigateToAuthPage,\r\n        text: \"ลองเลย!\"\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {/* POPUP WHEN USING OFFLINE MODE */}\r\n            {!offlineNotificationIsClosed && \r\n            <Popup \r\n                onClick={() => dispatch(notificationActions.closeOfflineNotification())}\r\n                mainText=\"คุณกำลังใช้งานโหมดออฟไลน์\"\r\n                extraText=\"ใช้งานโหมดออนไลน์เพื่อประสิทธิภาพสูงสุด!\" \r\n                onConfirm={onConfirmProps}\r\n            />}\r\n\r\n            {/* MAIN CONTENT */}\r\n            <AddNote />\r\n            <Notes />\r\n\r\n            {/* FOR EDITING MODE */}\r\n            <Edit />\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport styles from \"./Auth.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Alert from '../modals/AlertModal';\r\nimport Popup from \"../modals/Popup\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { FetchOptionsModel } from '../interfaces/interfaces';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { notificationActions } from '../redux-store/notificationSlice';\r\n\r\nexport default function Auth(props:{onRefreshData: () => void}) {\r\n\r\n    // NAVIGATE\r\n    const navigate = useNavigate();\r\n\r\n    // STATES\r\n    const usernameRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    const [ registering, setRegistering ] = useState(false);\r\n    const [alertMessage,setAlertMessage] = useState(\"\");\r\n    const [alertOn, setAlertOn] = useState(false);\r\n    const [pendingLogin, setPendingLogin] = useState(false);\r\n    const [pendingLogout, setPendingLogout] = useState(false);\r\n\r\n    // REDUX\r\n    const dispatch = useAppDispatch();\r\n    const trialNotificationIsClosed = useAppSelector(state => state.notification.trialNotificationIsClosed);\r\n    const { isLoggedIn, userName } = useAppSelector(state => state.auth);\r\n    \r\n    // --------------------------- SUBMIT FORM ----------------------------- //\r\n    function handleSubmit(e: React.FormEvent) {\r\n        e.preventDefault();\r\n\r\n        // ----- FORM VALIDATION ----- //\r\n        const username = usernameRef.current!.value;\r\n        const password = passwordRef.current!.value;\r\n        if (!username || !password) {\r\n            setAlertMessage(\"โปรดระบุ username และ password\");\r\n            setAlertOn(true);\r\n            return;\r\n        }\r\n\r\n        const options: FetchOptionsModel = {\r\n            method:\"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({username:username, password:password}),\r\n            credentials: \"include\"\r\n        }\r\n        // ----- REGISTER ----- //\r\n        if (registering) {\r\n            setPendingLogin(true);\r\n            fetch(\"/api/register\", options)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    console.log(\"registered successfully\");\r\n                    usernameRef.current!.value = \"\";\r\n                    passwordRef.current!.value = \"\";\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"ลงทะเบียนสำเร็จ\");\r\n                    setAlertOn(true);\r\n                    setRegistering(false);\r\n                } else if (res.status === 403) {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"username นี้ถูกใช้งานแล้ว\");\r\n                    setAlertOn(true);\r\n                } else {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"การลงทะเบียนล้มเหลว\");\r\n                    setAlertOn(true);\r\n                }\r\n            })\r\n        // ----- LOGIN ----- //\r\n        } else if (!registering) {\r\n            setPendingLogin(true);\r\n            fetch(\"/api/login\", options)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    console.log(\"logged in successfully\");\r\n                    props.onRefreshData();\r\n                    navigate(\"/posts\",{ replace: true });\r\n                } else if (res.status === 401) {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"username หรือ password ไม่ถูกต้อง\");\r\n                    setAlertOn(true);\r\n                } else {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"การเข้าสู่ระบบล้มเหลว\");\r\n                    setAlertOn(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setPendingLogin(false);\r\n                console.log(err.message);\r\n            });\r\n        }\r\n    }\r\n    // --------------------------------------------------------------------- //\r\n\r\n    // LOGOUT\r\n    function handleLogOut() {\r\n        setPendingLogout(true);\r\n        fetch(\"/api/logout\", {credentials:\"include\", method:\"POST\"})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            console.log(\"logged out successfully\");\r\n            props.onRefreshData();\r\n          } else {\r\n            props.onRefreshData();\r\n            throw new Error(\"failed logging out.\")\r\n          }\r\n        })\r\n        .catch(err => console.log(err.message));\r\n    }\r\n\r\n    function closeModal() {\r\n        setAlertOn(false);\r\n    }\r\n    \r\n    // PRESS \"ENTER\" TO GO FROM USERNAME INPUT TO PASSWORD INPUT\r\n    function handleUsernameKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            passwordRef.current!.focus();\r\n        }\r\n    }\r\n    \r\n    // PRESS \"ENTER\" OR \"ESC\" TO CLOSE MODAL\r\n    window.onkeydown = (e) => {\r\n        if (alertOn === true) {\r\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n                e.preventDefault();\r\n                closeModal();\r\n            }\r\n        }\r\n    }\r\n\r\n    // IF NOT LOGGED IN, SHOW LOGIN / REGISTER FORM\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <>\r\n\r\n            {/* ALERT MODAL */}\r\n            {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\r\n\r\n            {/* TRIAL NOTIFICATION (WHEN OFFLINE) */}\r\n            {!trialNotificationIsClosed &&\r\n            <Popup \r\n                onClick={() => dispatch(notificationActions.closeTrialNotification())}\r\n                mainText=\"ทดลองใช้งาน username = admin\"\r\n                extraText=\"password = my_password_123\"\r\n            />}\r\n\r\n            {/* MAIN CONTENT */}\r\n            <div className={styles.mainAuth}>\r\n\r\n                {/* BUTTON TO CHANGE FORM TYPE (LOGIN || REGISTER) */}\r\n                <button\r\n                    className={`${styles.toggleAuth} ${styles[\"two-buttons\"]}`}\r\n                    onClick={() => setRegistering(!registering)}\r\n                >\r\n                ต้องการ{(registering) ? \"เข้าสู่ระบบ\" : \"สมัครใช้งาน\"}\r\n                </button>\r\n\r\n                <br/><br/>\r\n\r\n                {/* FORM */}\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    {/* USERNAME */}\r\n                    <label htmlFor=\"username\" className={styles.labelUsernamePassword}>username</label>\r\n                    <br/>\r\n                    <input type=\"text\" ref={usernameRef} name=\"username\" autoComplete=\"off\" onKeyDown={handleUsernameKeyDown} />\r\n                    <br/><br/>\r\n\r\n                    {/* PASSWORD */}\r\n                    <label htmlFor=\"password\" className={styles.labelUsernamePassword}>password</label>\r\n                    <br/>\r\n                    <input type=\"password\" ref={passwordRef} name=\"password\" autoComplete=\"off\" />\r\n                    <br/><br/>\r\n\r\n                    {/* SUBMIT BUTTON OR SPINNER */}\r\n                    {!pendingLogin ?\r\n\r\n                    // BUTTON (REGISTER || LOGIN)\r\n                    <button \r\n                        className={`${styles.submitAuth} ${styles[\"two-buttons\"]}`}\r\n                        type=\"submit\"\r\n                    >\r\n                    {(registering) ? \"ลงทะเบียน\" : \"เข้าสู่ระบบ\"}\r\n                    </button> :\r\n\r\n                    // SPINNER (WHEN PENDING)\r\n                    <CircularProgress size={25} color=\"inherit\" className={styles[\"spinner-ui\"]} />\r\n\r\n                    }\r\n        \r\n                    <br/><br/>\r\n\r\n                    {/* GOOGLE AUTH BUTTON */}\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.googleAuth}>\r\n                        <a \r\n                        className={styles.googleA} \r\n                        href=\"/api/auth/google\">\r\n                            เข้าสู่ระบบ/สมัครด้วย GOOGLE ACCOUNT\r\n                        </a>\r\n                    </button>\r\n\r\n                    {/* WHEN TESTING, USE BELOW (localhost 4000) */}\r\n\r\n                    {/* <button\r\n                        type=\"button\"\r\n                        className={styles.googleAuth}>\r\n                        <a\r\n                        className={styles.googleA}\r\n                        href=\"http://localhost:4000/api/auth/google\">\r\n                            เข้าสู่ระบบ/สมัครโดย GOOGLE (TESTING)\r\n                        </a>\r\n                    </button> */}\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    // IF LOGGED IN, SHOW LOG OUT BUTTON\r\n    return (\r\n        <div className={styles.mainAuth}>\r\n\r\n            {/* USERNAME */}\r\n            {!pendingLogout && <h1 className={styles.userName}>{userName || \"\"}</h1>}\r\n            <br/>\r\n\r\n            {/* LOGOUT BUTTON || SPINNER */}\r\n            {!pendingLogout ?\r\n\r\n            // LOGOUT BUTTON\r\n            <button className={styles.logoutButton} type=\"button\" onClick={handleLogOut}>ออกจากระบบ</button> :\r\n\r\n            // SPINNER (WHEN PENDING)\r\n            <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />\r\n            \r\n            }\r\n\r\n            <br/><br/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\nimport Main from \"./pages/Main\";\r\nimport Auth from \"./pages/Auth\";\r\nimport \"./App.css\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"./hooks/useRedux\";\r\nimport { refreshData } from \"./redux-store/dataRefresher\";\r\n\r\nexport default function App() {  \r\n  const dispatch = useAppDispatch();\r\n  const isLoading = useAppSelector(state => state.loading.main);\r\n  \r\n  const refreshDataHandler = useCallback(() => {\r\n    refreshData(dispatch); // THUNK: dispatch(refreshData());\r\n  }, [dispatch]);\r\n\r\n  // --- fetch data when app starts --- //\r\n  useEffect(() => {\r\n    refreshDataHandler();\r\n  }, [refreshDataHandler]);\r\n\r\n  if (isLoading) {\r\n    return <div>\r\n      <h1 className=\"loading-text\">LOADING...</h1>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    // FLEX CONTAINER\r\n    <div className=\"flex-container\">\r\n\r\n      <Layout>\r\n        {/* NAV IS IN LAYOUT */}\r\n\r\n        {/* MAIN BODY */}\r\n        <div className=\"flex-main-body\">\r\n\r\n          {/* ROUTES \"/posts\" and \"/account\" */}\r\n          <Routes>\r\n            <Route path=\"/posts/*\" element={<Main />} />\r\n            <Route path=\"/account\" element={<Auth onRefreshData={refreshDataHandler} />} />\r\n            <Route path=\"/*\" element={<Navigate to=\"/posts\" />} />\r\n          </Routes>\r\n\r\n        </div>\r\n\r\n      {/* FOOTER IS IN LAYOUT */}\r\n      </Layout>\r\n\r\n    </div>\r\n  );\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./authSlice\";\r\nimport loadingReducer from \"./loadingSlice\";\r\nimport notificationReducer from \"./notificationSlice\";\r\nimport postReducer from \"./postSlice\";\r\n// IMPORT 4 SLICES\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        loading: loadingReducer,\r\n        notification: notificationReducer,\r\n        post: postReducer\r\n    }\r\n})\r\nexport default store;\r\n\r\n// \"ReturnType<typeof store.getState>\"\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// \"typeof store.dispatch\"\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// SOURCE: https://redux.js.org/usage/usage-with-typescript\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux-store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}