{"version":3,"sources":["pages/Auth.module.css","components/Note.module.css","components/AddNote.module.css","modals/EditModal.module.css","layout/Nav.module.css","modals/AlertModal.module.css","components/Popup.module.css","layout/Footer.module.css","components/Notes.module.css","layout/Nav.tsx","layout/Footer.tsx","layout/Layout.tsx","modals/AlertModal.tsx","hooks/useRedux.tsx","redux-store/authSlice.tsx","redux-store/loadingSlice.tsx","redux-store/notificationSlice.tsx","redux-store/postSlice.tsx","utilities/generateId.tsx","utilities/getLocalStoragePosts.tsx","redux-store/actionsHelper.tsx","hooks/useRequest.tsx","components/AddNote.tsx","components/Delete.tsx","components/Note.tsx","components/Notes.tsx","modals/EditModal.tsx","components/EditRoute.tsx","components/Popup.tsx","pages/Main.tsx","pages/Auth.tsx","App.tsx","redux-store/index.tsx","index.tsx"],"names":["module","exports","Header","className","styles","isActive","route","to","Footer","footer","Layout","props","children","ModalOverlay","onClick","onClose","modalBackdrop","modalBox","modalContent","message","Alert","ReactDOM","createPortal","document","getElementById","useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","isLoggedIn","userName","reducers","logIn","state","logOut","setUserName","action","payload","authActions","actions","authReducer","reducer","loadingSlice","main","turnOnIsLoading","turnOffIsLoading","loadingActions","loadingReducer","notificationSlice","offlineNotificationIsClosed","trialNotificationIsClosed","closeOfflineNotification","openOfflineNotification","closeTrialNotification","notificationActions","notificationReducer","postSlice","posts","setPosts","addPost","_id","id","item","des","date","pending","deletePost","filter","x","editPost","map","turnPendingOn","postActions","postReducer","generateId","char","capChar","toUpperCase","toRandom","answer","i","Math","floor","random","length","DEFAULT_POSTS","Date","getTime","getLocalStoragePosts","localStoragePosts","localStorage","getItem","updated","JSON","parse","parsedPosts","reversedPosts","reverse","setItem","stringify","reversedArray","Error","refreshData","dispatch","a","fetch","credentials","response","ok","json","userData","initialPosts","err","console","log","transformedPosts","useRequest","refreshDataHandler","useState","isLoading","setIsLoading","data","setData","success","setSuccess","requestData","options","method","headers","body","then","status","toString","res","getPostsAndUserName","useCallback","AddNote","post","auth","titleRef","useRef","desRef","expanded","setExpanded","alertMessage","setAlertMessage","alertOn","setAlertOn","addPostRequest","setPending","closeModal","window","onkeydown","e","key","preventDefault","onSubmit","current","value","trim","requestToAddPost","addRequestResponse","newItemId","getDate","newPosts","focus","cursorNone","cursorPointer","onKeyDown","type","placeholder","autoComplete","ref","CircularProgress","color","Delete","deletePostRequest","requestToDelete","size","classProp","Note","getMonth","getFullYear","noTitle","withTitle","React","memo","Notes","notes","postId","useParams","thePost","find","editPostRequest","navigate","useNavigate","borderStyle","setBorderStyle","desBorderStyle","setDesBorderStyle","handleSubmit","setTitleRed","setTimeout","setDesRed","requestToEdit","replace","handleCancel","useEffect","modalInput","style","modalTextarea","modalButtons","EditModal","querySelector","EditRoute","path","element","Popup","extraText","button","Main","notification","Fragment","Auth","usernameRef","passwordRef","registering","setRegistering","pendingLogin","setPendingLogin","pendingLogout","setPendingLogout","mainAuth","logoutButton","onRefreshData","catch","toggleAuth","username","password","htmlFor","labelUsernamePassword","submitAuth","googleAuth","googleA","href","App","loading","store","configureStore","render","StrictMode"],"mappings":"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","file":"static/js/main.85620f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainAuth\":\"Auth_mainAuth__2ZaZ0\",\"two-buttons\":\"Auth_two-buttons__WhNwd\",\"googleAuth\":\"Auth_googleAuth__3v-IN\",\"googleA\":\"Auth_googleA__1NmnJ\",\"toggleAuth\":\"Auth_toggleAuth__1_tZS\",\"submitAuth\":\"Auth_submitAuth__3-hrr\",\"logoutButton\":\"Auth_logoutButton__1Q9iA\",\"spinner-ui\":\"Auth_spinner-ui__16gXx\",\"labelUsernamePassword\":\"Auth_labelUsernamePassword__2VK9P\",\"userName\":\"Auth_userName__2pbIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noTitle\":\"Note_noTitle__3yhs-\",\"withTitle\":\"Note_withTitle__3Kw89\",\"Item-block\":\"Note_Item-block__3tgU5\",\"description-text\":\"Note_description-text__3dt3t\",\"item-block-footer\":\"Note_item-block-footer__2wNfO\",\"date-text\":\"Note_date-text__3BMF6\",\"footer-buttons\":\"Note_footer-buttons__3r1ym\",\"edit-link\":\"Note_edit-link__2Plr8\",\"spinner-ui\":\"Note_spinner-ui__3dbuM\",\"item-block-flex-container\":\"Note_item-block-flex-container__glae5\",\"item-block-flex-footer\":\"Note_item-block-flex-footer__1Uvhb\",\"item-block-flex-body\":\"Note_item-block-flex-body__27nY9\",\"footer-date\":\"Note_footer-date__12Frm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursorNone\":\"AddNote_cursorNone__d9LIG\",\"cursorPointer\":\"AddNote_cursorPointer__1F34S\",\"Add-item\":\"AddNote_Add-item__3Vgbj\",\"title-input\":\"AddNote_title-input__nPgHt\",\"Two-input\":\"AddNote_Two-input__2V-Uv\",\"spinner-ui\":\"AddNote_spinner-ui__118O-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"EditModal_modalBackdrop__3QvLq\",\"modalBox\":\"EditModal_modalBox__2wodi\",\"modalInput\":\"EditModal_modalInput__3ITpW\",\"modalTextarea\":\"EditModal_modalTextarea__11_oI\",\"modalButtons\":\"EditModal_modalButtons__1PPq9\",\"submit-button\":\"EditModal_submit-button__PTV1J\",\"spinnng-div\":\"EditModal_spinnng-div__NnoNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"Nav_main-nav__3LSxB\",\"route\":\"Nav_route__3xW3k\",\"route-active\":\"Nav_route-active__24Xg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"AlertModal_modalBackdrop__gkwGj\",\"modalBox\":\"AlertModal_modalBox__1E7Of\",\"modalContent\":\"AlertModal_modalContent__3saFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop-up\":\"Popup_pop-up__3AX5t\",\"button-container\":\"Popup_button-container__I1CYw\",\"button\":\"Popup_button__2M-QY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__Uthdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"Notes_notes__VPg_J\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Nav.module.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className={styles[\"main-nav\"]}>\r\n      <NavLink\r\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\r\n        to=\"/posts\"\r\n      >\r\n        โพสต์อิท\r\n      </NavLink>\r\n      <NavLink\r\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\r\n        to=\"/account\"\r\n      >\r\n        บัญชี\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from \"./Footer.module.css\"; \r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className={styles.footer}>\r\n            <p>Copyright 2022 © created and designed by Kiart Tantasi</p>\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Layout(props: {children: React.ReactNode}) {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      {props.children}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./AlertModal.module.css\";\r\n\r\n\r\nconst ModalOverlay =(props:{message:string; onClose: () => void;}) => {\r\n    return (\r\n        <div>\r\n            <div onClick={props.onClose} className={` ${styles.modalBackdrop} close-modal`}></div>\r\n            <div className={`${styles.modalBox} ${styles.modalContent}`}>\r\n                <h1>{props.message}</h1>\r\n                <button onClick={props.onClose}>ปิด</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Alert(props: {message:string; onClose: () => void}) {\r\n\r\n    return (\r\n        <>\r\n        {ReactDOM.createPortal(\r\n            <ModalOverlay message={props.message} onClose={props.onClose} />,\r\n            document.getElementById(\"modals\") as HTMLElement\r\n        )}\r\n        </>\r\n    )\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../redux-store/index';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n//from https://redux.js.org/usage/usage-with-typescript","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState: {isLoggedIn: boolean; userName: string} = {\r\n    isLoggedIn: false,\r\n    userName: \"\"\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        logIn(state) {\r\n            state.isLoggedIn = true;\r\n        },\r\n        logOut(state) {\r\n            state.isLoggedIn = false;\r\n        },\r\n        setUserName(state, action: PayloadAction<string>) {\r\n            state.userName = action.payload;            \r\n        }\r\n    }\r\n})\r\n\r\nexport const authActions = authSlice.actions;\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    main: false\r\n}\r\n\r\nconst loadingSlice = createSlice({\r\n    name: \"loading\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        turnOnIsLoading(state) {\r\n            state.main = true;\r\n        },\r\n        turnOffIsLoading(state) {\r\n            state.main = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const loadingActions = loadingSlice.actions;\r\nconst loadingReducer = loadingSlice.reducer;\r\nexport default loadingReducer;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    offlineNotificationIsClosed: false,\r\n    trialNotificationIsClosed: false,\r\n}\r\n\r\nconst notificationSlice = createSlice({\r\n    name: \"notification\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        closeOfflineNotification(state) {\r\n            state.offlineNotificationIsClosed = true;\r\n        },\r\n        openOfflineNotification(state) {\r\n            state.offlineNotificationIsClosed = false;\r\n        },\r\n        closeTrialNotification(state) {\r\n            state.trialNotificationIsClosed = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const notificationActions = notificationSlice.actions;\r\nconst notificationReducer = notificationSlice.reducer;\r\nexport default notificationReducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { PostModel } from \"../models/types\";\r\n\r\nconst initialState:{posts:PostModel[];} = {\r\n    posts: []\r\n}\r\n\r\nconst postSlice = createSlice({\r\n    name: \"post\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setPosts(state, action: PayloadAction<PostModel[]>) {\r\n            state.posts = action.payload;\r\n        },\r\n        addPost(state, action:PayloadAction<{id:string;item:string;des:string;date:number}>) {\r\n            state.posts = [...state.posts,{\r\n                _id: action.payload.id,\r\n                item: action.payload.item,\r\n                des: action.payload.des,\r\n                date: action.payload.date,\r\n                pending: false\r\n              }];\r\n        },\r\n        deletePost(state, action:PayloadAction<string>) {\r\n            state.posts = state.posts.filter(x => x._id !== action.payload);\r\n        },\r\n        editPost(state, action:PayloadAction<{id:string;item:string;des:string}>) {\r\n            state.posts = state.posts.map(x => {\r\n                if (x._id === action.payload.id) {\r\n                    return {...x, item: action.payload.item, des: action.payload.des, pending: false};\r\n                }\r\n                return x;\r\n            });\r\n        },\r\n        turnPendingOn(state, action: PayloadAction<string>) {\r\n            state.posts = state.posts.map(x => {\r\n                if (x._id === action.payload) {\r\n                    return {...x, pending: true};\r\n                }\r\n                return x;\r\n            });\r\n        }\r\n    }\r\n})\r\n\r\nexport const postActions = postSlice.actions;\r\nconst postReducer = postSlice.reducer;\r\nexport default postReducer;\r\n","export default function generateId() {\r\n    const char = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const capChar = char.toUpperCase();\r\n    const num = \"1234567890\";\r\n    const toRandom = char + capChar + num;\r\n  \r\n    let answer =\"\";\r\n    for (let i=0;i < 30; i++) {\r\n      answer = answer + toRandom[Math.floor(Math.random() * toRandom.length)];\r\n    }\r\n    return answer;\r\n}","import generateId from \"./generateId\";\r\nimport { PostModel } from \"../models/types\";\r\n\r\nconst DEFAULT_POSTS = [\r\n    {_id: generateId(), item: \"โพสต์แรกของฉัน\", des:\"ดูแลสุขภาพด้วยงับ\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"ประชุมเช้า\", des:\"วันพุธ เข้าzoomก่อน 10 โมง\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"จันทร์หน้า\", des:\"ทำ OT ...\", date: new Date().getTime(), pending: false},\r\n    {_id: generateId(), item: \"หยุดปีใหม่\", des:\"วันศุกร์หน้าแล้ว!\", date: new Date().getTime(), pending: false}\r\n];\r\n\r\nexport default function getLocalStoragePosts():PostModel[] {\r\n\r\n    const localStoragePosts = localStorage.getItem(\"myPostIt\");\r\n    const updated = localStorage.getItem(\"myPostItUpdate\");\r\n\r\n    //updated - just retrieve all local posts\r\n    if (localStoragePosts && updated) {\r\n        const parsedPosts = JSON.parse(localStoragePosts);\r\n        return parsedPosts; \r\n    }\r\n\r\n    // never updated - reverse posts first then use it\r\n    else if (localStoragePosts && !updated) {\r\n        const parsedPosts = JSON.parse(localStoragePosts);\r\n        const reversedPosts = [...parsedPosts].reverse();\r\n        localStorage.setItem(\"myPostIt\", JSON.stringify(reversedPosts));\r\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\r\n        return reversedPosts;\r\n    }\r\n\r\n    //default (never use)\r\n    else if (!localStoragePosts) {\r\n        localStorage.setItem(\"myPostIt\", JSON.stringify(DEFAULT_POSTS));\r\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\r\n        return DEFAULT_POSTS;\r\n    }\r\n\r\n    else {\r\n        throw new Error(\"getting posts error.\"); // should never happen.\r\n    }\r\n}","import { AppDispatch } from \".\";\r\nimport { authActions } from \"./authSlice\";\r\nimport { loadingActions } from \"./loadingSlice\";\r\nimport { notificationActions } from \"./notificationSlice\";\r\nimport { postActions } from \"./postSlice\";\r\nimport { PostModel } from \"../models/types\";\r\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\r\n\r\nexport const refreshData = () => {\r\n\r\n  return async function(dispatch: AppDispatch) {\r\n    dispatch(loadingActions.turnOnIsLoading());\r\n  \r\n    let initialPosts: PostModel[];\r\n    let userName: string;\r\n    let isLoggedIn: boolean;\r\n\r\n    try {\r\n      const response = await fetch(\"/api/user\", {credentials:\"include\"});\r\n      if (!response.ok) throw new Error(\"offline mode activated\");\r\n      const userData = await response.json();\r\n      initialPosts = userData.posts;\r\n      userName = userData.userName;\r\n      isLoggedIn = true;\r\n    }\r\n    \r\n    catch (error) {\r\n      const localStoragePosts = getLocalStoragePosts();\r\n      initialPosts = localStoragePosts;\r\n      userName = \"\";\r\n      isLoggedIn = false;\r\n      const err = (error as Error);\r\n      console.log(err.message || \"getting posts failed.\");\r\n    }\r\n\r\n    const transformedPosts = initialPosts.map(x => {\r\n      return{...x, pending: false}\r\n    });\r\n    dispatch(postActions.setPosts(transformedPosts));\r\n    dispatch(isLoggedIn ? authActions.logIn(): authActions.logOut());\r\n    dispatch(isLoggedIn ? notificationActions.closeOfflineNotification() : notificationActions.openOfflineNotification());\r\n    dispatch(authActions.setUserName(userName));\r\n    dispatch(loadingActions.turnOffIsLoading());\r\n  }\r\n};","import { useCallback, useState } from \"react\";\r\nimport { useAppDispatch } from \"./useRedux\";\r\nimport { refreshData } from \"../redux-store/actionsHelper\";\r\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\r\n\r\nimport { AddPostReturn, FetchOptionsModel, PostModel } from \"../models/types\";\r\nimport { FetchDataReturn } from \"../models/types\";\r\n\r\nexport default function useRequest() {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const refreshDataHandler = () => {\r\n        dispatch(refreshData());\r\n    }\r\n\r\n    const [isLoading , setIsLoading] = useState(false);\r\n    const [data, setData] = useState<FetchDataReturn | AddPostReturn>();\r\n    const [success, setSuccess] = useState(false);\r\n    \r\n    const getPostsAndUserName = useCallback( async() => {\r\n        setIsLoading(true);\r\n        let initialPosts:PostModel[];\r\n        let userName;\r\n        let isLoggedIn;\r\n        try {\r\n          const response = await fetch(\"/api/user\", {credentials:\"include\"});\r\n          if (!response.ok) throw new Error(\"offline mode activated\");\r\n          const userData = await response.json();\r\n          initialPosts = userData.posts;\r\n          userName = userData.userName;\r\n          isLoggedIn = true;\r\n        }\r\n        \r\n        catch (error) {\r\n          const localStoragePosts = getLocalStoragePosts();\r\n          initialPosts = localStoragePosts;\r\n          userName = null;\r\n          isLoggedIn = false;\r\n          const err = (error as Error);\r\n          console.log(err.message || \"getting posts failed.\");\r\n        }\r\n\r\n        setIsLoading(false);\r\n        setData({\r\n            posts: initialPosts,\r\n            isLoggedIn: isLoggedIn,\r\n            userName: userName\r\n        });\r\n        return {\r\n            posts: initialPosts,\r\n            isLoggedIn: isLoggedIn,\r\n            userName: userName\r\n        } \r\n    }, []);\r\n    \r\n    async function addPost(requestData: {item:string;des:string}) {\r\n        setIsLoading(true);\r\n\r\n        const options: FetchOptionsModel = {\r\n            method:\"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({ item: requestData.item, des: requestData.des }),\r\n            credentials: \"include\"\r\n        }\r\n        return fetch(\"/api/posts\", options)\r\n        .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else if (response.status === 400) {\r\n              setIsLoading(false);\r\n              throw new Error(\"No information sent\");\r\n            } else {\r\n              refreshDataHandler();\r\n              setIsLoading(false);\r\n              throw new Error(\"No authentication\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            setIsLoading(false);\r\n            setData({\r\n                id: data.id,\r\n                date: data.date\r\n            });\r\n            return {\r\n                id: data.id,\r\n                date: data.date\r\n            }\r\n        })\r\n    }\r\n\r\n    async function deletePost(requestData:{id:string}) {\r\n        setIsLoading(true);\r\n        setSuccess(false);\r\n        return fetch(\"/api/posts/\"+ requestData.id.toString(), {method:\"DELETE\", credentials: \"include\"})\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                setIsLoading(false);\r\n                setSuccess(true);\r\n                return \"success\";\r\n            } else if (res.status === 403) {\r\n                refreshDataHandler();\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"No authentication\");\r\n            } else {\r\n                refreshDataHandler();\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"deleting failed.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    async function editPost(requestData:{item:string;des:string;id:string}) {\r\n        setIsLoading(true);\r\n        setSuccess(false);\r\n        const options: FetchOptionsModel = {\r\n            method:\"PATCH\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({item: requestData.item, des:requestData.des}),\r\n            credentials: \"include\"\r\n        }\r\n\r\n        return fetch(\"/api/posts/\" + requestData.id, options)\r\n        .then(response => {\r\n            if(response.ok) {\r\n                setIsLoading(false);\r\n                setSuccess(true);\r\n                return \"success\";\r\n            } else if (response.status === 400) {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                throw new Error(\"No information sent\")\r\n            } else if (response.status === 403) {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                refreshDataHandler();\r\n                throw new Error(\"No authentication\")\r\n            } else {\r\n                setIsLoading(false);\r\n                setSuccess(false);\r\n                refreshDataHandler();\r\n                throw new Error(\"updating failed.\")\r\n            }\r\n        })\r\n    }\r\n    return {getPostsAndUserName, addPost, editPost, deletePost, isLoading, data, success};\r\n}","import React, { useState, useRef } from \"react\";\r\nimport Alert from \"../modals/AlertModal\";\r\nimport useRequest from \"../hooks/useRequest\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/useRedux\";\r\nimport { postActions } from \"../redux-store/postSlice\";\r\nimport generateId from \"../utilities/generateId\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport styles from \"./AddNote.module.css\"\r\n\r\nexport default function AddNote() {\r\n  const dispatch = useAppDispatch();\r\n  const posts = useAppSelector(state => state.post.posts);\r\n  const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\r\n\r\n  const titleRef = useRef<HTMLInputElement>(null);\r\n  const desRef = useRef<HTMLInputElement>(null);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [alertMessage,setAlertMessage] = useState(\"\");\r\n  const [alertOn, setAlertOn] = useState(false);\r\n  const { addPost: addPostRequest } = useRequest();\r\n  const [pending, setPending] = useState(false);\r\n\r\n  function handleTitleOn() {\r\n    if (expanded === false) {\r\n      setExpanded(true);\r\n    }\r\n  }\r\n\r\n  function handleTitleKeyPress(e: React.KeyboardEvent) {\r\n    if (e.key === \"ArrowDown\") {\r\n      e.preventDefault();\r\n      desRef.current!.focus();\r\n    }\r\n  }\r\n\r\n  function handleDesKeyDown(e: React.KeyboardEvent) {\r\n    if (e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      titleRef.current!.focus();\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    // FAILED\r\n    if (expanded === false) {\r\n      setAlertMessage(\"โปรดระบุข้อความ\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    const item = titleRef.current!.value.trim() || \"\";\r\n    const des = desRef.current!.value.trim() || \"\";\r\n    if (!item && !des) {\r\n      setAlertMessage(\"โปรดระบุข้อความ\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    if (item.length > 25) {\r\n      setAlertMessage(\"หัวข้อยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n    if (item.length !== 0 && des.length > 95) {\r\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    } else if (item.length === 0 && des.length > 120) {\r\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\r\n      setAlertOn(true);\r\n      return;\r\n    }\r\n\r\n    // SUCCESS\r\n    //online adding\r\n    if (isLoggedIn) {\r\n      const requestToAddPost = async() => {\r\n        try {\r\n          const addRequestResponse = await addPostRequest({item:item,des:des});\r\n          dispatch(postActions.addPost({id: addRequestResponse.id, item, des, date: addRequestResponse.date}));\r\n          setPending(false);\r\n        } catch (error) {\r\n          const err = error as Error;\r\n          console.log(err.message);\r\n          if (err.message === \"No information sent\") {\r\n            setPending(false);\r\n          }\r\n        }\r\n      }\r\n      setPending(true);\r\n      requestToAddPost();\r\n    //offline adding\r\n    } else {\r\n      const newItemId = generateId();\r\n      const getDate = new Date().getTime();\r\n      const newPosts = [\r\n        ...posts,{\r\n          _id: newItemId,\r\n          item: item,\r\n          des: des,\r\n          date: getDate,\r\n        }\r\n      ];\r\n      localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n      dispatch(postActions.addPost({id: newItemId, item, des, date: getDate}))\r\n    }\r\n    \r\n    titleRef.current!.value = \"\";\r\n    desRef.current!.value = \"\";\r\n    desRef.current!.focus();\r\n  }\r\n\r\n  function closeModal() {\r\n    setAlertOn(false);\r\n  }\r\n\r\n  window.onkeydown = (e) => {\r\n    if (alertOn) {\r\n      if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n        e.preventDefault();\r\n        closeModal();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\r\n    <div className={styles[\"Add-item\"]}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={` ${styles[\"Two-input\"]} ${expanded ? styles.cursorNone : styles.cursorPointer}`}>\r\n          {expanded && <input\r\n            className={styles[\"title-input\"]}\r\n            onKeyDown={handleTitleKeyPress}\r\n            type=\"text\"\r\n            placeholder=\"หัวข้อ (optional)\"\r\n            autoComplete=\"off\"\r\n            ref={titleRef}\r\n          ></input>}\r\n          \r\n          <input\r\n            className={styles[\"des-input\"]}\r\n            onClick={handleTitleOn}\r\n            onKeyDown={handleDesKeyDown}\r\n            type=\"text\"\r\n            placeholder=\"โพสต์อิท !\"\r\n            autoComplete=\"off\"\r\n            ref={desRef}\r\n          ></input>\r\n\r\n        </div>\r\n        {!pending && <button\r\n          type=\"submit\"\r\n        >\r\n          <AddIcon />\r\n        </button>}\r\n      </form>\r\n      {pending && <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport useRequest from \"../hooks/useRequest\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { postActions } from '../redux-store/postSlice';\r\n\r\nexport default function Delete(props:{id:string;classProp:string}) {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const posts = useAppSelector(state => state.post.posts);\r\n    const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\r\n\r\n    const [pending, setPending] = useState(false);\r\n    const { deletePost: deletePostRequest } = useRequest();\r\n    const id = props.id;\r\n  \r\n    function handleDelete() {\r\n        //online deleting\r\n        if (isLoggedIn) {\r\n            setPending(true);\r\n            const requestToDelete = async() => {\r\n                try {\r\n                    await deletePostRequest({id: id.toString()});\r\n                    dispatch(postActions.deletePost(id));\r\n                } catch(error) {\r\n                    const err = error as Error;\r\n                    console.log(err.message || \"delete request failed.\");\r\n                }\r\n            }\r\n            requestToDelete();\r\n            \r\n        //offline deleting\r\n        } else {\r\n            const newPosts = posts.filter((x) => x._id.toString() !== id.toString());\r\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n            dispatch(postActions.deletePost(id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className=\"delete-button\" onClick={handleDelete}>\r\n            {!pending && <DeleteIcon />}\r\n            {pending && <CircularProgress size={20} color=\"inherit\" className={props.classProp} />}\r\n        </button>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Delete from \"../components/Delete\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport styles from \"./Note.module.css\";\r\n\r\nconst Note: React.FC<{ date:number; item: string; des: string; id: string; }> = (props) => {\r\n    const date = new Date(props.date).getDate().toString() + \"/\" + ( new Date(props.date).getMonth() + 1 ).toString() + \"/\" + new Date(props.date).getFullYear().toString() || \"no date described.\";\r\n  \r\n    return (\r\n      <div className={styles[\"Item-block\"]}>\r\n  \r\n        <div className={styles[\"item-block-flex-container\"]}>\r\n          <div className={styles[\"item-block-flex-body\"]}>\r\n            <h3>{props.item}</h3>\r\n            <p className={` ${styles[\"description-text\"]} ${(props.item === \"\") ? styles.noTitle : styles.withTitle}`}>{props.des}</p>\r\n          </div>\r\n  \r\n          <div className={` ${styles[\"item-block-footer\"]} ${styles[\"item-block-flex-footer\"]} `}>\r\n            <div className={styles[\"footer-date\"]}>\r\n              <p className={styles[\"date-text\"]}>{date}</p>\r\n            </div>\r\n            <div className={styles[\"footer-buttons\"]}>\r\n              {/* {pending && <CircularProgress size={20} color=\"inherit\" className={styles[\"spinner-ui\"]} />} */}\r\n              <button><Link className={styles[\"edit-link\"]} to={`/posts/edit/${props.id}`}><EditIcon className=\"edit-icon\" /></Link></button>\r\n              <Delete id={props.id} classProp={styles[\"spinner-ui\"]} />\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default React.memo(Note);","import Note from \"./Note\";\r\nimport styles from \"./Notes.module.css\";\r\nimport { useAppSelector } from \"../hooks/useRedux\";\r\n\r\nexport default function Notes() {\r\n  const posts = useAppSelector(state => state.post.posts);\r\n  const reversedPosts = [...posts].reverse();\r\n\r\n  return (\r\n    <div className={styles.notes}>      \r\n      {reversedPosts.map((x) => {\r\n        return (\r\n          <Note\r\n            key={x._id}\r\n            id={x._id}\r\n            item={x.item}\r\n            des={x.des}\r\n            date={x.date}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}","import React, {useRef, useEffect, useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useRequest from \"../hooks/useRequest\";\r\n\r\nimport styles from \"./EditModal.module.css\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { postActions } from '../redux-store/postSlice';\r\n\r\nfunction ModalOverlay() {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const { posts} = useAppSelector(state => state.post);\r\n    const { isLoggedIn } = useAppSelector(state => state.auth);\r\n\r\n    const { postId } = useParams();\r\n    const thePost = posts.find(x => x._id.toString() === postId);\r\n    const { editPost: editPostRequest } = useRequest();\r\n    const navigate = useNavigate();\r\n    const titleRef = useRef<HTMLInputElement>(null);\r\n    const desRef = useRef<HTMLTextAreaElement>(null);\r\n    const [ borderStyle, setBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n    const [ desBorderStyle, setDesBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n\r\n    useEffect(() => {\r\n        if (thePost && !thePost.pending) {\r\n            titleRef.current!.value = thePost.item || \"\";\r\n            desRef.current!.value = thePost.des || \"\";\r\n            desRef.current!.focus();\r\n        } else if (!thePost && !thePost!.pending) {\r\n            console.log(\"loading data for editing...\");\r\n        }\r\n    }, [thePost])\r\n\r\n    function handleTitleKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            desRef.current!.focus();\r\n        }\r\n    }\r\n    function handleDesKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            handleSubmit();\r\n        }\r\n    }\r\n    function handleSubmit(e?: React.FormEvent) {\r\n        if (e) e.preventDefault();\r\n        \r\n        const id: string | undefined = postId;\r\n        // if (id === undefined) {\r\n        //     throw new Error(\"cannot get ID of the post.\")\r\n        // }\r\n        const item = titleRef.current!.value.trim();\r\n        const des = desRef.current!.value.trim();\r\n\r\n        // functions to red the input and textarea\r\n        function setTitleRed() {\r\n            setBorderStyle({\"border\":\"1px solid red\"});\r\n            setTimeout(() => {\r\n                setBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n            }, 3000);\r\n        }\r\n        function setDesRed() {\r\n            setDesBorderStyle({\"border\":\"1px solid red\"});\r\n            setTimeout(() => {\r\n                setDesBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\r\n            }, 3000);\r\n        }\r\n\r\n        if (item === thePost!.item && des === thePost!.des) { // no changes\r\n            console.log(\"no changes found.\");\r\n            navigate(\"/posts\");\r\n            return;\r\n        }\r\n        if (item.length === 0 && des.length === 0) { // empty values\r\n            setTitleRed();\r\n            setDesRed();\r\n            return;\r\n        }\r\n        if (item.length > 25 && des.length > 95) { // tile > 25 and des > 95\r\n            setTitleRed();\r\n            setDesRed();\r\n            return;\r\n        }\r\n        if (item.length > 25) { // title > 25\r\n            setTitleRed();\r\n            return;\r\n        }\r\n        if (des.length > 95 && item.length !== 0) { // with title\r\n            setDesRed();\r\n            return;\r\n        }\r\n        if (des.length > 120 && item.length === 0) { // without title\r\n            setDesRed();\r\n            return;\r\n        }\r\n\r\n        // SUCCESS\r\n        //online updating      \r\n        if (isLoggedIn) {\r\n            dispatch(postActions.turnPendingOn(id!));\r\n            const requestToEdit = async() => {\r\n                try {\r\n                    await editPostRequest({item:item,des:des,id:id!});\r\n                    dispatch(postActions.editPost({id:id!, item, des}));\r\n                    navigate(\"/posts\", {replace:true});\r\n                } catch(err) {\r\n                    console.log(err);\r\n                    navigate(\"/posts\", {replace:true});\r\n                }\r\n            }\r\n            requestToEdit();\r\n        //offline updating\r\n        } else {\r\n            const newPosts = posts.map((x) => (x._id.toString() === id!.toString() ? { ...x, item: item, des: des } : x));\r\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\r\n            dispatch(postActions.editPost({id:id!, item, des}));\r\n            navigate(\"/posts\", {replace:true});\r\n        }\r\n    }\r\n\r\n    function handleCancel() {\r\n        navigate(\"/posts\",{ replace: true });        \r\n    }\r\n\r\n    window.onkeydown = (e) => {\r\n        if (e.key === \"Escape\") {\r\n            e.preventDefault();\r\n            handleCancel();\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={handleCancel} className={`backdrop-div ${styles.modalBackdrop}`}></div>\r\n            <div className={styles.modalBox}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" ref={titleRef} className={styles.modalInput} style={borderStyle} onKeyDown={handleTitleKeyDown} />\r\n                    <br/><br/>\r\n                    <textarea onKeyDown={handleDesKeyDown} ref={desRef} className={styles.modalTextarea} style={desBorderStyle} />\r\n                    {thePost!.pending ?  <div className={styles[\"spinnng-div\"]}><CircularProgress size={35} color=\"inherit\" /></div> \r\n                    : <div className={styles.modalButtons}>\r\n                        <button type=\"button\" onClick={handleCancel}>ยกเลิก</button>\r\n                        <button type=\"submit\" className={styles[\"submit-button\"]}>แก้ไข</button>\r\n                    </div>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function EditModal () {\r\n    return (\r\n        <>\r\n        {ReactDOM.createPortal(\r\n            <ModalOverlay />,\r\n            document.querySelector(\"#edit-modal\") as HTMLElement\r\n        )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport EditModal from \"../modals/EditModal\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\n\r\nexport default function EditRoute() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"edit\">\r\n                <Route path=\":postId\" element={<EditModal />} />\r\n            </Route>\r\n        </Routes>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Popup.module.css\";\r\n\r\nexport default function Popup(props:{children:React.ReactNode; onClick:()=> void;extraText?:string}) {\r\n  return (\r\n    <div className={styles[\"pop-up\"]}>\r\n        <p>{props.children}</p>\r\n        {props.extraText && <p>{props.extraText}</p>}\r\n        <div className={styles[\"button-container\"]}>\r\n            <button className={styles.button} onClick={props.onClick}>ปิด</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport AddNote from '../components/AddNote';\r\nimport Notes from \"../components/Notes\";\r\nimport Edit from \"../components/EditRoute\";\r\nimport Popup from '../components/Popup';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { notificationActions } from '../redux-store/notificationSlice';\r\n\r\nexport default function Main() {    \r\n    const dispatch = useAppDispatch();\r\n    const offlineNotificationIsClosed = useAppSelector(state => state.notification.offlineNotificationIsClosed);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!offlineNotificationIsClosed && <Popup onClick={() => dispatch(notificationActions.closeOfflineNotification())}>คุณกำลังใช้งานโหมดออฟไลน์</Popup>}\r\n            <AddNote />\r\n            <Notes />\r\n            <Edit />\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport styles from \"./Auth.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Alert from '../modals/AlertModal';\r\nimport Popup from \"../components/Popup\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { FetchOptionsModel } from '../models/types';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { notificationActions } from '../redux-store/notificationSlice';\r\n\r\nexport default function Auth(props:{onRefreshData: () => void}) {\r\n\r\n    const navigate = useNavigate();\r\n    const usernameRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    const [ registering, setRegistering ] = useState(false);\r\n    const [alertMessage,setAlertMessage] = useState(\"\");\r\n    const [alertOn, setAlertOn] = useState(false);\r\n    const [pendingLogin, setPendingLogin] = useState(false);\r\n    const [pendingLogout, setPendingLogout] = useState(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n    const trialNotificationIsClosed = useAppSelector(state => state.notification.trialNotificationIsClosed);\r\n    const { isLoggedIn, userName } = useAppSelector(state => state.auth);\r\n    \r\n    function handleSubmit(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        const username = usernameRef.current!.value;\r\n        const password = passwordRef.current!.value;\r\n        if (!username || !password) {\r\n            setAlertMessage(\"โปรดระบุ username และ password\");\r\n            setAlertOn(true);\r\n            return;\r\n        }\r\n        const options: FetchOptionsModel = {\r\n            method:\"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({username:username, password:password}),\r\n            credentials: \"include\"\r\n        }\r\n        // register\r\n        if (registering) {\r\n            setPendingLogin(true);\r\n            fetch(\"/api/register\", options)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    console.log(\"registered successfully\");\r\n                    usernameRef.current!.value = \"\";\r\n                    passwordRef.current!.value = \"\";\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"ลงทะเบียนสำเร็จ\");\r\n                    setAlertOn(true);\r\n                    setRegistering(false);\r\n                } else if (res.status === 403) {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"username นี้ถูกใช้งานแล้ว\");\r\n                    setAlertOn(true);\r\n                } else {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"การลงทะเบียนล้มเหลว\");\r\n                    setAlertOn(true);\r\n                }\r\n            })\r\n        // log in\r\n        } else if (!registering) {\r\n            setPendingLogin(true);\r\n            fetch(\"/api/login\", options)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    console.log(\"logged in successfully\");\r\n                    props.onRefreshData();\r\n                    navigate(\"/posts\",{ replace: true });\r\n                } else if (res.status === 401) {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"username หรือ password ไม่ถูกต้อง\");\r\n                    setAlertOn(true);\r\n                } else {\r\n                    setPendingLogin(false);\r\n                    setAlertMessage(\"การเข้าสู่ระบบล้มเหลว\");\r\n                    setAlertOn(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setPendingLogin(false);\r\n                console.log(err.message);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleLogOut() {\r\n        setPendingLogout(true);\r\n        fetch(\"/api/logout\", {credentials:\"include\", method:\"POST\"})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            console.log(\"logged out successfully\");\r\n            props.onRefreshData();\r\n          } else {\r\n            props.onRefreshData();\r\n              throw new Error(\"failed logging out.\")\r\n          }\r\n        })\r\n        .catch(err => console.log(err.message));\r\n    }\r\n\r\n    function closeModal() {\r\n        setAlertOn(false);\r\n    }\r\n\r\n    function handleUsernameKeyDown(e: React.KeyboardEvent) {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            passwordRef.current!.focus();\r\n        }\r\n    }\r\n    \r\n    window.onkeydown = (e) => {\r\n        if (alertOn === true) {\r\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n            e.preventDefault();\r\n            closeModal();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <>\r\n            {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\r\n            {!trialNotificationIsClosed && <Popup onClick={() => dispatch(notificationActions.closeTrialNotification())} extraText=\"password = my_password_123\">ทดลองใช้งาน username = admin</Popup>}\r\n            <div className={styles.mainAuth}>\r\n                <button className={`${styles.toggleAuth} ${styles[\"two-buttons\"]} `} onClick={() => setRegistering(!registering)}>ต้องการ{(registering) ? \"เข้าสู่ระบบ\" : \"สมัครใช้งาน\"}</button>\r\n                <br/><br/>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"username\" className={styles.labelUsernamePassword}>username</label>\r\n                    <br/>\r\n                    <input type=\"text\" ref={usernameRef} name=\"username\" autoComplete=\"off\" onKeyDown={handleUsernameKeyDown} />\r\n                    <br/><br/>\r\n                    <label htmlFor=\"password\" className={styles.labelUsernamePassword}>password</label>\r\n                    <br/>\r\n                    <input type=\"password\" ref={passwordRef} name=\"password\" autoComplete=\"off\" />\r\n                    <br/><br/>\r\n                    {!pendingLogin && <button className={`${styles.submitAuth} ${styles[\"two-buttons\"]}`} type=\"submit\">{(registering) ? \"ลงทะเบียน\" : \"เข้าสู่ระบบ\"}</button>}\r\n                    {pendingLogin && <CircularProgress size={25} color=\"inherit\" className={styles[\"spinner-ui\"]} />}\r\n                    <br/><br/>\r\n                    <button type=\"button\" className={styles.googleAuth}><a className={styles.googleA} href=\"/api/auth/google\">เข้าสู่ระบบ/สมัครด้วย GOOGLE ACCOUNT</a></button>\r\n                    {/* when testing on 3000, use below */}\r\n                    {/* <button type=\"button\" className={styles.googleAuth}><a className={styles.googleA} href=\"http://localhost:4000/api/auth/google\">เข้าสู่ระบบ/สมัครโดย GOOGLE (3000)</a></button> */}\r\n                </form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <div className={styles.mainAuth}>\r\n            {!pendingLogout && <h1 className={styles.userName}>{userName || \"\"}</h1>}\r\n            <br/>\r\n            {!pendingLogout && <button className={styles.logoutButton} type=\"button\" onClick={handleLogOut}>ออกจากระบบ</button>}\r\n            {pendingLogout && <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />}\r\n            <br/><br/>\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\nimport Main from \"./pages/Main\";\r\nimport Auth from \"./pages/Auth\";\r\nimport \"./App.css\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"./hooks/useRedux\";\r\nimport { refreshData } from \"./redux-store/actionsHelper\";\r\n\r\nexport default function App() {  \r\n  const dispatch = useAppDispatch();\r\n  const isLoading = useAppSelector(state => state.loading.main);\r\n  \r\n  const refreshDataHandler = useCallback(() => {\r\n    dispatch(refreshData())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    refreshDataHandler();\r\n  }, [refreshDataHandler]);\r\n\r\n  if (isLoading) {\r\n    return <div>\r\n      <h1 className=\"loading-text\">LOADING...</h1>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-container\">\r\n      <Layout>\r\n      <div className=\"flex-main-body\">\r\n      <Routes>\r\n        <Route path=\"/posts/*\" element={<Main />} />\r\n        <Route path=\"/account\" element={<Auth onRefreshData={refreshDataHandler} />} />\r\n        <Route path=\"/*\" element={<Navigate to=\"/posts\" />} />\r\n      </Routes>\r\n      </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport authReducer from \"./authSlice\";\r\nimport loadingReducer from \"./loadingSlice\";\r\nimport notificationReducer from \"./notificationSlice\";\r\nimport postReducer from \"./postSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        loading: loadingReducer,\r\n        notification: notificationReducer,\r\n        post: postReducer\r\n    }\r\n})\r\nexport default store;\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n// from https://redux.js.org/usage/usage-with-typescript\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux-store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}